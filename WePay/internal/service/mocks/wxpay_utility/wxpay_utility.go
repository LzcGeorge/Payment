// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/wxpay_utility/wxpay_utility.go
//
// Generated by this command:
//
//	mockgen -source=./internal/service/wxpay_utility/wxpay_utility.go -destination=./internal/service/mocks/wxpay_utility/wxpay_utility.go -package=wxpaymocks
//

// Package wxpaymocks is a generated GoMock package.
package wxpaymocks

import (
	rsa "crypto/rsa"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMchConfigInterface is a mock of MchConfigInterface interface.
type MockMchConfigInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMchConfigInterfaceMockRecorder
	isgomock struct{}
}

// MockMchConfigInterfaceMockRecorder is the mock recorder for MockMchConfigInterface.
type MockMchConfigInterfaceMockRecorder struct {
	mock *MockMchConfigInterface
}

// NewMockMchConfigInterface creates a new mock instance.
func NewMockMchConfigInterface(ctrl *gomock.Controller) *MockMchConfigInterface {
	mock := &MockMchConfigInterface{ctrl: ctrl}
	mock.recorder = &MockMchConfigInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMchConfigInterface) EXPECT() *MockMchConfigInterfaceMockRecorder {
	return m.recorder
}

// CertificateSerialNo mocks base method.
func (m *MockMchConfigInterface) CertificateSerialNo() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CertificateSerialNo")
	ret0, _ := ret[0].(string)
	return ret0
}

// CertificateSerialNo indicates an expected call of CertificateSerialNo.
func (mr *MockMchConfigInterfaceMockRecorder) CertificateSerialNo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CertificateSerialNo", reflect.TypeOf((*MockMchConfigInterface)(nil).CertificateSerialNo))
}

// MchId mocks base method.
func (m *MockMchConfigInterface) MchId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MchId")
	ret0, _ := ret[0].(string)
	return ret0
}

// MchId indicates an expected call of MchId.
func (mr *MockMchConfigInterfaceMockRecorder) MchId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MchId", reflect.TypeOf((*MockMchConfigInterface)(nil).MchId))
}

// PrivateKey mocks base method.
func (m *MockMchConfigInterface) PrivateKey() *rsa.PrivateKey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrivateKey")
	ret0, _ := ret[0].(*rsa.PrivateKey)
	return ret0
}

// PrivateKey indicates an expected call of PrivateKey.
func (mr *MockMchConfigInterfaceMockRecorder) PrivateKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrivateKey", reflect.TypeOf((*MockMchConfigInterface)(nil).PrivateKey))
}

// WechatPayPublicKey mocks base method.
func (m *MockMchConfigInterface) WechatPayPublicKey() *rsa.PublicKey {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WechatPayPublicKey")
	ret0, _ := ret[0].(*rsa.PublicKey)
	return ret0
}

// WechatPayPublicKey indicates an expected call of WechatPayPublicKey.
func (mr *MockMchConfigInterfaceMockRecorder) WechatPayPublicKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WechatPayPublicKey", reflect.TypeOf((*MockMchConfigInterface)(nil).WechatPayPublicKey))
}

// WechatPayPublicKeyId mocks base method.
func (m *MockMchConfigInterface) WechatPayPublicKeyId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WechatPayPublicKeyId")
	ret0, _ := ret[0].(string)
	return ret0
}

// WechatPayPublicKeyId indicates an expected call of WechatPayPublicKeyId.
func (mr *MockMchConfigInterfaceMockRecorder) WechatPayPublicKeyId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WechatPayPublicKeyId", reflect.TypeOf((*MockMchConfigInterface)(nil).WechatPayPublicKeyId))
}
